{"version":3,"file":"static/js/186.3180642c.chunk.js","mappings":"kMA8BA,UA1BgB,WACZ,OAA8BA,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAMR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAACC,GAAcN,EAAWM,EAASC,QAAS,IAAEC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAC5F,GAAE,CAACR,EAASD,KAGT,8BAECD,EAAQa,OAAS,GAClB,wBACGb,EAAQc,KAAI,SAAAC,GACX,OAAQ,2BACN,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFIF,EAAOG,GAIvB,OAGL,uBAAG,8CAIV,C,mMC3BKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAU,kCAAmC,CAChEC,OAAQ,CACJC,QAASJ,KAHd,cACGZ,EADH,yBAMIA,EAASiB,KAAKhB,SANlB,kEASA,SAAeiB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACoBL,EAAAA,EAAAA,IAAU,yDAA0D,CACvFC,OAAQ,CACJC,QAASJ,EACTQ,MAAOD,KAJZ,cACGnB,EADH,yBAOIA,EAASiB,KAAKhB,SAPlB,kEAUA,SAAeoB,EAAtB,+CAAO,OAAP,oBAAO,WAAkC1B,GAAlC,uFACoBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,mBAA6C,CAChEoB,OAAQ,CACJC,QAASJ,KAHd,cACGZ,EADH,yBAMIA,EAASiB,MANb,kEASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAkC3B,GAAlC,uFACoBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,2BAAqD,CACxEoB,OAAQ,CACJC,QAASJ,KAHd,cACGZ,EADH,yBAMIA,EAASiB,MANb,kEASA,SAAenB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCH,GAAlC,uFACoBmB,EAAAA,EAAAA,IAAA,gBAAmBnB,EAAnB,mCAA6D,CAChFoB,OAAQ,CACJC,QAASJ,KAHd,cACGZ,EADH,yBAMIA,EAASiB,MANb,kEAvCPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Reviews/Reviews.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { fetchMovieReviews } from 'services/api.js'\nimport { useParams } from 'react-router-dom';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        fetchMovieReviews(movieId).then((response) => {setReviews(response.results)}).catch(error => console.log(error));\n    }, [movieId, setReviews]);\n\n    return (\n        <>\n\n        {reviews.length > 0 ? (\n        <ul>\n          {reviews.map(review => {\n            return (<li key={review.id}>\n              <h3>{review.author}</h3>\n              <p>{review.content}</p>\n            </li>)\n            })}\n        </ul>\n      ) : (\n        <p>We don't have any reviews for this movie</p>\n      )}\n        </>\n    )\n}\nexport default Reviews;\n","import axios from 'axios';\n\nconst API_KEY = '7c0c458e245909c66f3397c50f32766a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending () {\n    const response = await axios.get('trending/all/day?language=en-US', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data.results;\n}\n\nexport async function fetchSearchMovies (inputText) {\n    const response = await axios.get('search/movie?include_adult=false&language=en-US&page=1', {\n        params: {\n            api_key: API_KEY,\n            query: inputText,\n        },\n    })\n    return response.data.results;\n}\n\nexport async function fetchMovieDetails (movieId) {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\nexport async function fetchMovieCredits (movieId) {\n    const response = await axios.get(`movie/${movieId}/credits?language=en-US`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\nexport async function fetchMovieReviews (movieId) {\n    const response = await axios.get(`movie/${movieId}/reviews?language=en-US&page=1'`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["useState","reviews","setReviews","movieId","useParams","useEffect","fetchMovieReviews","then","response","results","catch","error","console","log","length","map","review","author","content","id","API_KEY","fetchTrending","axios","params","api_key","data","fetchSearchMovies","inputText","query","fetchMovieDetails","fetchMovieCredits"],"sourceRoot":""}