{"version":3,"file":"static/js/884.0e4aeb08.chunk.js","mappings":"sMA+DA,UA3DqB,WACrB,IAAQA,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAkCE,EAAAA,EAAAA,YAAlC,eAAOC,EAAP,KAAkBC,EAAlB,KAQA,IALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBN,GAASO,KAAMH,GAAeI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GAC9D,GAAE,CAACT,EAASI,IACbM,QAAQC,IAAIR,IAEPA,EACD,OAAO,KAGT,IAAQS,EAAuDT,EAAvDS,MAAOC,EAAgDV,EAAhDU,SAAUC,EAAsCX,EAAtCW,OAAQC,EAA8BZ,EAA9BY,YAAaC,EAAiBb,EAAjBa,aACxCC,EAAaC,OAAOC,OAAOL,GAAQM,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAElD,OACE,4BACE,4BACE,gBACEC,IAAG,yCAAoCR,GACvCS,IAAKZ,EACLa,MAAO,OAET,4BACE,wBAAKb,KACL,yCACc,0BAAOI,QAErB,sCACA,uBAAIH,KACJ,oCACA,uBAAII,EAAWS,KAAK,eAIxB,mDACA,2BACE,yBACE,SAAC,KAAD,CACEC,GAAE,kBAAaxB,EAAUyB,GAAvB,SADJ,qBAMF,yBACE,SAAC,KAAD,CACED,GAAE,kBAAaxB,EAAUyB,GAAvB,YADJ,2BAOJ,SAAC,KAAD,MAGL,C,uHC3DKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAU,kCAAmC,CAChEC,OAAQ,CACJC,QAASJ,KAHd,cACGK,EADH,yBAMIA,EAASC,KAAKC,SANlB,kEAmBA,SAAe9B,EAAtB,+CAAO,OAAP,oBAAO,WAAkCN,GAAlC,uFACoB+B,EAAAA,EAAAA,IAAA,gBAAmB/B,EAAnB,mBAA6C,CAChEgC,OAAQ,CACJC,QAASJ,KAHd,cACGK,EADH,yBAMIA,EAASC,MANb,kEArBPJ,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["pages/MovieDetails.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from \"react\"\nimport { fetchMovieDetails } from '../services/api'\nimport { useParams, Link, Outlet } from 'react-router-dom'\n\nconst MovieDetails = () => {\nconst { movieId } = useParams();\nconst [movieInfo, setMovieInfo] = useState();\n\n\nuseEffect(() => {\n    fetchMovieDetails(movieId).then((setMovieInfo)).catch(error => console.log(error));\n}, [movieId, setMovieInfo]);\nconsole.log(movieInfo)\n\nif (!movieInfo) {\n    return null;\n  }\n\n  const { title, overview, genres, poster_path, vote_average } = movieInfo;\n  const genreNames = Object.values(genres).map(genre => genre.name);\n\n  return (\n    <div>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${poster_path}`}\n          alt={title}\n          width={200}\n        />\n        <div>\n          <h2>{title}</h2>\n          <p>\n            User Score: <span>{vote_average}</span>\n          </p>\n          <h3>Overview</h3>\n          <p>{overview}</p>\n          <h4>Genres</h4>\n          <p>{genreNames.join(', ')}</p>\n        </div>\n      </div>\n\n      <p>Additional information</p>\n      <ul>\n        <li>\n          <Link\n            to={`/movies/${movieInfo.id}/cast`}\n          >\n            Cast\n          </Link>\n        </li>\n        <li>\n          <Link\n            to={`/movies/${movieInfo.id}/reviews`}\n          >\n            Reviews\n          </Link>\n        </li>\n      </ul>\n      <Outlet />\n    </div>\n  );\n}\n\nexport default MovieDetails\n\n","import axios from 'axios';\n\nconst API_KEY = '7c0c458e245909c66f3397c50f32766a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending () {\n    const response = await axios.get('trending/all/day?language=en-US', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data.results;\n}\n\nexport async function fetchSearchMovies (inputText) {\n    const response = await axios.get('search/movie?include_adult=false&language=en-US&page=1', {\n        params: {\n            api_key: API_KEY,\n            query: inputText,\n        },\n    })\n    return response.data.results;\n}\n\nexport async function fetchMovieDetails (movieId) {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\nexport async function fetchMovieCredits (movieId) {\n    const response = await axios.get(`movie/${movieId}/credits?language=en-US`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\nexport async function fetchMovieReviews (movieId) {\n    const response = await axios.get(`movie/${movieId}/reviews?language=en-US&page=1'`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["movieId","useParams","useState","movieInfo","setMovieInfo","useEffect","fetchMovieDetails","then","catch","error","console","log","title","overview","genres","poster_path","vote_average","genreNames","Object","values","map","genre","name","src","alt","width","join","to","id","API_KEY","fetchTrending","axios","params","api_key","response","data","results"],"sourceRoot":""}