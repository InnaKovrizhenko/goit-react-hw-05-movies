{"version":3,"file":"static/js/247.2ac82f26.chunk.js","mappings":"mMAmCA,UA/Ba,WACT,OAA4BA,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,OAJAE,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBH,GAASI,MAAK,SAACC,GAAcN,EAAUM,EAASC,KAAM,IAAEC,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAhB,GACxF,GAAE,CAACR,KAGA,8BACCF,IAAU,wBACNA,EAAOa,KAAI,SAAAC,GACR,OAAO,2BACL,gBACEC,IAAKD,EAAME,aAAN,yCAAuDF,EAAME,cAZlF,6GAagBC,IAAI,MAER,4BACE,uBAAIH,EAAMI,QACV,yBAAG,cAAYJ,EAAMK,kBAPPL,EAAMM,GAUzB,OAKZ,C,mMC/BKC,EAAU,mCAGT,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,oGACoBC,EAAAA,EAAAA,IAAU,kCAAmC,CAChEC,OAAQ,CACJC,QAASJ,KAHd,cACGd,EADH,yBAMIA,EAASmB,KAAKC,SANlB,kEASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAkCC,GAAlC,uFACoBN,EAAAA,EAAAA,IAAU,yDAA0D,CACvFC,OAAQ,CACJC,QAASJ,EACTS,MAAOD,KAJZ,cACGtB,EADH,yBAOIA,EAASmB,KAAKC,SAPlB,kEAUA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAAkC7B,GAAlC,uFACoBqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,mBAA6C,CAChEsB,OAAQ,CACJC,QAASJ,KAHd,cACGd,EADH,yBAMIA,EAASmB,MANb,kEASA,SAAerB,EAAtB,+CAAO,OAAP,oBAAO,WAAkCH,GAAlC,uFACoBqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,2BAAqD,CACxEsB,OAAQ,CACJC,QAASJ,KAHd,cACGd,EADH,yBAMIA,EAASmB,MANb,kEASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAkC9B,GAAlC,uFACoBqB,EAAAA,EAAAA,IAAA,gBAAmBrB,EAAnB,mCAA6D,CAChFsB,OAAQ,CACJC,QAASJ,KAHd,cACGd,EADH,yBAMIA,EAASmB,MANb,kEAvCPH,EAAAA,EAAAA,SAAAA,QAAyB,+B","sources":["components/Cast/Cast.jsx","services/api.js"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { fetchMovieCredits } from 'services/api.js'\nimport { useParams } from 'react-router-dom';\n\nconst Cast = () => {\n    const [actors, setActors] = useState([]);\n    const { movieId } = useParams();\n    const noImagePoster =\n    'https://cdn.vectorstock.com/i/preview-1x/82/99/no-image-available-like-missing-picture-vector-43938299.jpg';\n\n    useEffect(() => {\n        fetchMovieCredits(movieId).then((response) => {setActors(response.cast)}).catch(error => console.log(error));\n    }, [movieId]);\n\n    return (\n        <>\n        {actors && <ul>\n            {actors.map(actor => {\n                return <li key={actor.id}>\n                  <img\n                    src={actor.profile_path ? `https://image.tmdb.org/t/p/w200${actor.profile_path}` : noImagePoster}\n                    alt=''\n                  />\n                <div>\n                  <p>{actor.name}</p>\n                  <p>Character: {actor.character}</p>\n                </div>\n                </li>\n            })}\n        </ul>      \n        }\n        </>\n    )\n}\n\nexport default Cast;","import axios from 'axios';\n\nconst API_KEY = '7c0c458e245909c66f3397c50f32766a';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport async function fetchTrending () {\n    const response = await axios.get('trending/all/day?language=en-US', {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data.results;\n}\n\nexport async function fetchSearchMovies (inputText) {\n    const response = await axios.get('search/movie?include_adult=false&language=en-US&page=1', {\n        params: {\n            api_key: API_KEY,\n            query: inputText,\n        },\n    })\n    return response.data.results;\n}\n\nexport async function fetchMovieDetails (movieId) {\n    const response = await axios.get(`movie/${movieId}?language=en-US`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\nexport async function fetchMovieCredits (movieId) {\n    const response = await axios.get(`movie/${movieId}/credits?language=en-US`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\nexport async function fetchMovieReviews (movieId) {\n    const response = await axios.get(`movie/${movieId}/reviews?language=en-US&page=1'`, {\n        params: {\n            api_key: API_KEY,\n        },\n    })\n    return response.data;\n}\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"],"names":["useState","actors","setActors","movieId","useParams","useEffect","fetchMovieCredits","then","response","cast","catch","error","console","log","map","actor","src","profile_path","alt","name","character","id","API_KEY","fetchTrending","axios","params","api_key","data","results","fetchSearchMovies","inputText","query","fetchMovieDetails","fetchMovieReviews"],"sourceRoot":""}